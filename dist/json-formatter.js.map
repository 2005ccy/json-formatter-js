{"version":3,"sources":["webpack:///json-formatter.js","webpack:///webpack/bootstrap 7fe644c404e21e9ff644","webpack:///./src/index.ts","webpack:///./src/helpers.ts"],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","__WEBPACK_IMPORTED_MODULE_0__helpers__","DATE_STRING_REGEX","PARTIAL_DATE_REGEX","JSON_DATE_REGEX","requestAnimationFrame","window","cb","_defaultConfig","hoverPreviewEnabled","hoverPreviewArrayCount","hoverPreviewFieldCount","animateOpen","animateClose","theme","JSONFormatter","json","open","config","key","this","_isOpen","undefined","set","type","test","indexOf","Array","isArray","keys","length","isEmptyObject","isObject","map","toggleOpen","isOpen","element","appendChildren","removeChildren","classList","toggle","openAtDepth","depth","remove","add","getInlinepreview","_this","join","narrowKeys","slice","kvs","ellipsis","render","togglerLink","appendChild","hasKey","objectWrapperSpan","constructorName","arrayWrapperSpan","isUrl","isDate","setAttribute","valuePreview","document","createTextNode","preview","children","isEmpty","addEventListener","bind","animated","querySelector","index_1","addAChild_1","formatter","forEach","childrenElement","childrenRemoved_1","removeAChild_1","removeChild","innerHTML","escapeString","str","replace","getObjectName","constructor","funcNameRegex","results","exec","toString","getType","getValuePreview","getPreview","cssClass","className","createElement","content","el","Node","String"],"mappings":"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","file":"json-formatter.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__helpers__ = __webpack_require__(1);\n\nvar DATE_STRING_REGEX = /(^\\d{1,4}[\\.|\\\\/|-]\\d{1,2}[\\.|\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/;\nvar PARTIAL_DATE_REGEX = /\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/;\nvar JSON_DATE_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n// When toggleing, don't animated removal or addition of more than a few items\nvar MAX_ANIMATED_TOGGLE_ITEMS = 10;\nvar requestAnimationFrame = window.requestAnimationFrame || function (cb) { cb(); return 0; };\n;\nvar _defaultConfig = {\n    hoverPreviewEnabled: false,\n    hoverPreviewArrayCount: 100,\n    hoverPreviewFieldCount: 5,\n    animateOpen: true,\n    animateClose: true,\n    theme: null\n};\n/**\n * @class JSONFormatter\n *\n * JSONFormatter allows you to render JSON objects in HTML with a\n * **collapsible** navigation.\n*/\nvar JSONFormatter = (function () {\n    /**\n     * @param {object} json The JSON object you want to render. It has to be an\n     * object or array. Do NOT pass raw JSON string.\n     *\n     * @param {number} [open=1] his number indicates up to how many levels the\n     * rendered tree should expand. Set it to `0` to make the whole tree collapsed\n     * or set it to `Infinity` to expand the tree deeply\n     *\n     * @param {object} [config=defaultConfig] -\n     *  defaultConfig = {\n     *   hoverPreviewEnabled: false,\n     *   hoverPreviewArrayCount: 100,\n     *   hoverPreviewFieldCount: 5\n     * }\n     *\n     * Available configurations:\n     *  #####Hover Preview\n     * * `hoverPreviewEnabled`:  enable preview on hover\n     * * `hoverPreviewArrayCount`: number of array items to show in preview Any\n     *    array larger than this number will be shown as `Array[XXX]` where `XXX`\n     *    is length of the array.\n     * * `hoverPreviewFieldCount`: number of object properties to show for object\n     *   preview. Any object with more properties that thin number will be\n     *   truncated.\n     *\n     * @param {string} [key=undefined] The key that this object in it's parent\n     * context\n    */\n    function JSONFormatter(json, open, config, key) {\n        if (open === void 0) { open = 1; }\n        if (config === void 0) { config = _defaultConfig; }\n        this.json = json;\n        this.open = open;\n        this.config = config;\n        this.key = key;\n        // Hold the open state after the toggler is used\n        this._isOpen = null;\n        // Setting default values for config object\n        if (this.config.hoverPreviewEnabled === undefined) {\n            this.config.hoverPreviewEnabled = _defaultConfig.hoverPreviewEnabled;\n        }\n        if (this.config.hoverPreviewArrayCount === undefined) {\n            this.config.hoverPreviewArrayCount = _defaultConfig.hoverPreviewArrayCount;\n        }\n        if (this.config.hoverPreviewFieldCount === undefined) {\n            this.config.hoverPreviewFieldCount = _defaultConfig.hoverPreviewFieldCount;\n        }\n    }\n    Object.defineProperty(JSONFormatter.prototype, \"isOpen\", {\n        /*\n         * is formatter open?\n        */\n        get: function () {\n            if (this._isOpen !== null) {\n                return this._isOpen;\n            }\n            else {\n                return this.open > 0;\n            }\n        },\n        /*\n         * set open state (from toggler)\n        */\n        set: function (value) {\n            this._isOpen = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isDate\", {\n        /*\n         * is this a date string?\n        */\n        get: function () {\n            return (this.type === 'string') &&\n                (DATE_STRING_REGEX.test(this.json) ||\n                    JSON_DATE_REGEX.test(this.json) ||\n                    PARTIAL_DATE_REGEX.test(this.json));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isUrl\", {\n        /*\n         * is this a URL string?\n        */\n        get: function () {\n            return this.type === 'string' && (this.json.indexOf('http') === 0);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isArray\", {\n        /*\n         * is this an array?\n        */\n        get: function () {\n            return Array.isArray(this.json);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isObject\", {\n        /*\n         * is this an object?\n         * Note: In this context arrays are object as well\n        */\n        get: function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"a\" /* isObject */])(this.json);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isEmptyObject\", {\n        /*\n         * is this an empty object with no properties?\n        */\n        get: function () {\n            return !this.keys.length && !this.isArray;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"isEmpty\", {\n        /*\n         * is this an empty object or array?\n        */\n        get: function () {\n            return this.isEmptyObject || (this.keys && !this.keys.length && this.isArray);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"hasKey\", {\n        /*\n         * did we recieve a key argument?\n         * This means that the formatter was called as a sub formatter of a parent formatter\n        */\n        get: function () {\n            return typeof this.key !== 'undefined';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"constructorName\", {\n        /*\n         * if this is an object, get constructor function name\n        */\n        get: function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"b\" /* getObjectName */])(this.json);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"type\", {\n        /*\n         * get type of this value\n         * Possible values: all JavaScript primitive types plus \"array\" and \"null\"\n        */\n        get: function () {\n            return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"c\" /* getType */])(this.json);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JSONFormatter.prototype, \"keys\", {\n        /*\n         * get object keys\n         * If there is an empty key we pad it wit quotes to make it visible\n        */\n        get: function () {\n            if (this.isObject) {\n                return Object.keys(this.json).map(function (key) { return key ? key : '\"\"'; });\n            }\n            else {\n                return [];\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Toggles `isOpen` state\n     *\n    */\n    JSONFormatter.prototype.toggleOpen = function () {\n        this.isOpen = !this.isOpen;\n        if (this.element) {\n            if (this.isOpen) {\n                this.appendChildren(this.config.animateOpen);\n            }\n            else {\n                this.removeChildren(this.config.animateClose);\n            }\n            this.element.classList.toggle(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('open'));\n        }\n    };\n    /**\n    * Open all children up to a certain depth.\n    * Allows actions such as expand all/collapse all\n    *\n    */\n    JSONFormatter.prototype.openAtDepth = function (depth) {\n        if (depth === void 0) { depth = 1; }\n        if (depth < 0) {\n            return;\n        }\n        this.open = depth;\n        this.isOpen = (depth !== 0);\n        if (this.element) {\n            this.removeChildren(false);\n            if (depth === 0) {\n                this.element.classList.remove(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('open'));\n            }\n            else {\n                this.appendChildren(this.config.animateOpen);\n                this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('open'));\n            }\n        }\n    };\n    /**\n     * Generates inline preview\n     *\n     * @returns {string}\n    */\n    JSONFormatter.prototype.getInlinepreview = function () {\n        var _this = this;\n        if (this.isArray) {\n            // if array length is greater then 100 it shows \"Array[101]\"\n            if (this.json.length > this.config.hoverPreviewArrayCount) {\n                return \"Array[\" + this.json.length + \"]\";\n            }\n            else {\n                return \"[\" + this.json.map(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* getPreview */]).join(', ') + \"]\";\n            }\n        }\n        else {\n            var keys = this.keys;\n            // the first five keys (like Chrome Developer Tool)\n            var narrowKeys = keys.slice(0, this.config.hoverPreviewFieldCount);\n            // json value schematic information\n            var kvs = narrowKeys.map(function (key) { return key + \":\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"e\" /* getPreview */])(_this.json[key]); });\n            // if keys count greater then 5 then show ellipsis\n            var ellipsis = keys.length >= this.config.hoverPreviewFieldCount ? '…' : '';\n            return \"{\" + kvs.join(', ') + ellipsis + \"}\";\n        }\n    };\n    /**\n     * Renders an HTML element and installs event listeners\n     *\n     * @returns {HTMLDivElement}\n    */\n    JSONFormatter.prototype.render = function () {\n        // construct the root element and assign it to this.element\n        this.element = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('div', 'row');\n        // construct the toggler link\n        var togglerLink = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('a', 'toggler-link');\n        // if this is an object we need a wrapper span (toggler)\n        if (this.isObject) {\n            togglerLink.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'toggler'));\n        }\n        // if this is child of a parent formatter we need to append the key\n        if (this.hasKey) {\n            togglerLink.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'key', this.key + \":\"));\n        }\n        // Value for objects and arrays\n        if (this.isObject) {\n            // construct the value holder element\n            var value = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'value');\n            // we need a wrapper span for objects\n            var objectWrapperSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span');\n            // get constructor name and append it to wrapper span\n            var constructorName = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'constructor-name', this.constructorName);\n            objectWrapperSpan.appendChild(constructorName);\n            // if it's an array append the array specific elements like brackets and length\n            if (this.isArray) {\n                var arrayWrapperSpan = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span');\n                arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'bracket', '['));\n                arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'number', (this.json.length)));\n                arrayWrapperSpan.appendChild(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'bracket', ']'));\n                objectWrapperSpan.appendChild(arrayWrapperSpan);\n            }\n            // append object wrapper span to toggler link\n            value.appendChild(objectWrapperSpan);\n            togglerLink.appendChild(value);\n            // Primitive values\n        }\n        else {\n            // make a value holder element\n            var value = this.isUrl ? __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('a') : __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span');\n            // add type and other type related CSS classes\n            value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])(this.type));\n            if (this.isDate) {\n                value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('date'));\n            }\n            if (this.isUrl) {\n                value.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('url'));\n                value.setAttribute('href', this.json);\n            }\n            // Append value content to value element\n            var valuePreview = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"g\" /* getValuePreview */])(this.json, this.json);\n            value.appendChild(document.createTextNode(valuePreview));\n            // append the value element to toggler link\n            togglerLink.appendChild(value);\n        }\n        // if hover preview is enabled, append the inline preview element\n        if (this.isObject && this.config.hoverPreviewEnabled) {\n            var preview = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('span', 'preview-text');\n            preview.appendChild(document.createTextNode(this.getInlinepreview()));\n            togglerLink.appendChild(preview);\n        }\n        // construct a children element\n        var children = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"f\" /* createElement */])('div', 'children');\n        // set CSS classes for children\n        if (this.isObject) {\n            children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('object'));\n        }\n        if (this.isArray) {\n            children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('array'));\n        }\n        if (this.isEmpty) {\n            children.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('empty'));\n        }\n        // set CSS classes for root element\n        if (this.config && this.config.theme) {\n            this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])(this.config.theme));\n        }\n        if (this.isOpen) {\n            this.element.classList.add(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('open'));\n        }\n        // append toggler and children elements to root element\n        this.element.appendChild(togglerLink);\n        this.element.appendChild(children);\n        // if formatter is set to be open call appendChildren\n        if (this.isObject && this.isOpen) {\n            this.appendChildren();\n        }\n        // add event listener for toggling\n        if (this.isObject) {\n            togglerLink.addEventListener('click', this.toggleOpen.bind(this));\n        }\n        return this.element;\n    };\n    /**\n     * Appends all the children to children element\n     * Animated option is used when user triggers this via a click\n    */\n    JSONFormatter.prototype.appendChildren = function (animated) {\n        var _this = this;\n        if (animated === void 0) { animated = false; }\n        var children = this.element.querySelector(\"div.\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('children'));\n        if (!children || this.isEmpty) {\n            return;\n        }\n        if (animated) {\n            var index_1 = 0;\n            var addAChild_1 = function () {\n                var key = _this.keys[index_1];\n                var formatter = new JSONFormatter(_this.json[key], _this.open - 1, _this.config, key);\n                children.appendChild(formatter.render());\n                index_1 += 1;\n                if (index_1 < _this.keys.length) {\n                    if (index_1 > MAX_ANIMATED_TOGGLE_ITEMS) {\n                        addAChild_1();\n                    }\n                    else {\n                        requestAnimationFrame(addAChild_1);\n                    }\n                }\n            };\n            requestAnimationFrame(addAChild_1);\n        }\n        else {\n            this.keys.forEach(function (key) {\n                var formatter = new JSONFormatter(_this.json[key], _this.open - 1, _this.config, key);\n                children.appendChild(formatter.render());\n            });\n        }\n    };\n    /**\n     * Removes all the children from children element\n     * Animated option is used when user triggers this via a click\n    */\n    JSONFormatter.prototype.removeChildren = function (animated) {\n        if (animated === void 0) { animated = false; }\n        var childrenElement = this.element.querySelector(\"div.\" + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__helpers__[\"d\" /* cssClass */])('children'));\n        if (animated) {\n            var childrenRemoved_1 = 0;\n            var removeAChild_1 = function () {\n                if (childrenElement && childrenElement.children.length) {\n                    childrenElement.removeChild(childrenElement.children[0]);\n                    childrenRemoved_1 += 1;\n                    if (childrenRemoved_1 > MAX_ANIMATED_TOGGLE_ITEMS) {\n                        removeAChild_1();\n                    }\n                    else {\n                        requestAnimationFrame(removeAChild_1);\n                    }\n                }\n            };\n            requestAnimationFrame(removeAChild_1);\n        }\n        else {\n            if (childrenElement) {\n                childrenElement.innerHTML = '';\n            }\n        }\n    };\n    return JSONFormatter;\n}());\n/* harmony default export */ __webpack_exports__[\"default\"] = (JSONFormatter);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isObject;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = getObjectName;\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = getType;\n/* harmony export (immutable) */ __webpack_exports__[\"g\"] = getValuePreview;\n/* harmony export (immutable) */ __webpack_exports__[\"e\"] = getPreview;\n/* harmony export (immutable) */ __webpack_exports__[\"d\"] = cssClass;\n/* harmony export (immutable) */ __webpack_exports__[\"f\"] = createElement;\n/*\n * Escapes `\"` charachters from string\n*/\nfunction escapeString(str) {\n    return str.replace('\"', '\\\"');\n}\n/*\n * Determines if a value is an object\n*/\nfunction isObject(value) {\n    var type = typeof value;\n    return !!value && (type == 'object');\n}\n/*\n * Gets constructor name of an object.\n * From http://stackoverflow.com/a/332429\n *\n*/\nfunction getObjectName(object) {\n    if (object === undefined) {\n        return '';\n    }\n    if (object === null) {\n        return 'Object';\n    }\n    if (typeof object === 'object' && !object.constructor) {\n        return 'Object';\n    }\n    var funcNameRegex = /function ([^(]*)/;\n    var results = (funcNameRegex).exec((object).constructor.toString());\n    if (results && results.length > 1) {\n        return results[1];\n    }\n    else {\n        return '';\n    }\n}\n/*\n * Gets type of an object. Returns \"null\" for null objects\n*/\nfunction getType(object) {\n    if (object === null) {\n        return 'null';\n    }\n    return typeof object;\n}\n/*\n * Generates inline preview for a JavaScript object based on a value\n*/\nfunction getValuePreview(object, value) {\n    var type = getType(object);\n    if (type === 'null' || type === 'undefined') {\n        return type;\n    }\n    if (type === 'string') {\n        value = '\"' + escapeString(value) + '\"';\n    }\n    if (type === 'function') {\n        // Remove content of the function\n        return object.toString()\n            .replace(/[\\r\\n]/g, '')\n            .replace(/\\{.*\\}/, '') + '{…}';\n    }\n    return value;\n}\n/*\n * Generates inline preview for a JavaScript object\n*/\nfunction getPreview(object) {\n    var value = '';\n    if (isObject(object)) {\n        value = getObjectName(object);\n        if (Array.isArray(object))\n            value += '[' + object.length + ']';\n    }\n    else {\n        value = getValuePreview(object, object);\n    }\n    return value;\n}\n/*\n * Generates a prefixed CSS class name\n*/\nfunction cssClass(className) {\n    return \"json-formatter-\" + className;\n}\n/*\n  * Creates a new DOM element wiht given type and class\n  * TODO: move me to helpers\n*/\nfunction createElement(type, className, content) {\n    var el = document.createElement(type);\n    if (className) {\n        el.classList.add(cssClass(className));\n    }\n    if (content !== undefined) {\n        if (content instanceof Node) {\n            el.appendChild(content);\n        }\n        else {\n            el.appendChild(document.createTextNode(String(content)));\n        }\n    }\n    return el;\n}\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(0);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// json-formatter.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7fe644c404e21e9ff644","import {\n  isObject,\n  getObjectName,\n  getType,\n  getValuePreview,\n  getPreview,\n  cssClass,\n  createElement\n} from './helpers';\n\nimport * as style from './style.less';\n\nconst DATE_STRING_REGEX = /(^\\d{1,4}[\\.|\\\\/|-]\\d{1,2}[\\.|\\\\/|-]\\d{1,4})(\\s*(?:0?[1-9]:[0-5]|1(?=[012])\\d:[0-5])\\d\\s*[ap]m)?$/;\nconst PARTIAL_DATE_REGEX = /\\d{2}:\\d{2}:\\d{2} GMT-\\d{4}/;\nconst JSON_DATE_REGEX = /\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}.\\d{3}Z/;\n\n// When toggleing, don't animated removal or addition of more than a few items\nconst MAX_ANIMATED_TOGGLE_ITEMS = 10;\n\nconst requestAnimationFrame = window.requestAnimationFrame || function(cb: ()=>void) { cb(); return 0; };\n\ninterface JSONFormatterConfiguration {\n  hoverPreviewEnabled?: boolean;\n  hoverPreviewArrayCount?: number;\n  hoverPreviewFieldCount?: number;\n  animateOpen?: boolean;\n  animateClose?: boolean;\n  theme?: string;\n};\n\nconst _defaultConfig: JSONFormatterConfiguration = {\n  hoverPreviewEnabled: false,\n  hoverPreviewArrayCount: 100,\n  hoverPreviewFieldCount: 5,\n  animateOpen: true,\n  animateClose: true,\n  theme: null\n};\n\n\n/**\n * @class JSONFormatter\n *\n * JSONFormatter allows you to render JSON objects in HTML with a\n * **collapsible** navigation.\n*/\nexport default class JSONFormatter {\n\n  // Hold the open state after the toggler is used\n  private _isOpen : boolean = null;\n\n  // A reference to the element that we render to\n  private element: Element;\n\n  /**\n   * @param {object} json The JSON object you want to render. It has to be an\n   * object or array. Do NOT pass raw JSON string.\n   *\n   * @param {number} [open=1] his number indicates up to how many levels the\n   * rendered tree should expand. Set it to `0` to make the whole tree collapsed\n   * or set it to `Infinity` to expand the tree deeply\n   *\n   * @param {object} [config=defaultConfig] -\n   *  defaultConfig = {\n   *   hoverPreviewEnabled: false,\n   *   hoverPreviewArrayCount: 100,\n   *   hoverPreviewFieldCount: 5\n   * }\n   *\n   * Available configurations:\n   *  #####Hover Preview\n   * * `hoverPreviewEnabled`:  enable preview on hover\n   * * `hoverPreviewArrayCount`: number of array items to show in preview Any\n   *    array larger than this number will be shown as `Array[XXX]` where `XXX`\n   *    is length of the array.\n   * * `hoverPreviewFieldCount`: number of object properties to show for object\n   *   preview. Any object with more properties that thin number will be\n   *   truncated.\n   *\n   * @param {string} [key=undefined] The key that this object in it's parent\n   * context\n  */\n  constructor(public json: any, private open = 1, private config: JSONFormatterConfiguration = _defaultConfig, private key?: string) {\n\n    // Setting default values for config object\n    if (this.config.hoverPreviewEnabled === undefined) {\n      this.config.hoverPreviewEnabled = _defaultConfig.hoverPreviewEnabled;\n    }\n    if (this.config.hoverPreviewArrayCount === undefined) {\n      this.config.hoverPreviewArrayCount = _defaultConfig.hoverPreviewArrayCount;\n    }\n    if (this.config.hoverPreviewFieldCount === undefined) {\n      this.config.hoverPreviewFieldCount = _defaultConfig.hoverPreviewFieldCount;\n    }\n  }\n\n  /*\n   * is formatter open?\n  */\n  private get isOpen(): boolean {\n    if (this._isOpen !== null) {\n      return this._isOpen\n    } else {\n      return this.open > 0;\n    }\n  }\n\n  /*\n   * set open state (from toggler)\n  */\n  private set isOpen(value: boolean) {\n    this._isOpen = value;\n  }\n\n  /*\n   * is this a date string?\n  */\n  private get isDate(): boolean {\n    return (this.type === 'string') &&\n      (DATE_STRING_REGEX.test(this.json) ||\n      JSON_DATE_REGEX.test(this.json) ||\n      PARTIAL_DATE_REGEX.test(this.json));\n  }\n\n  /*\n   * is this a URL string?\n  */\n  private get isUrl(): boolean {\n    return this.type === 'string' && (this.json.indexOf('http') === 0);\n  }\n\n  /*\n   * is this an array?\n  */\n  private get isArray(): boolean {\n    return Array.isArray(this.json);\n  }\n\n  /*\n   * is this an object?\n   * Note: In this context arrays are object as well\n  */\n  private get isObject(): boolean {\n    return isObject(this.json);\n  }\n\n  /*\n   * is this an empty object with no properties?\n  */\n  private get isEmptyObject(): boolean {\n    return !this.keys.length && !this.isArray;\n  }\n\n  /*\n   * is this an empty object or array?\n  */\n  private get isEmpty(): boolean {\n    return this.isEmptyObject || (this.keys && !this.keys.length && this.isArray);\n  }\n\n  /*\n   * did we recieve a key argument?\n   * This means that the formatter was called as a sub formatter of a parent formatter\n  */\n  private get hasKey(): boolean {\n    return typeof this.key !== 'undefined';\n  }\n\n  /*\n   * if this is an object, get constructor function name\n  */\n  private get constructorName(): string {\n    return getObjectName(this.json);\n  }\n\n  /*\n   * get type of this value\n   * Possible values: all JavaScript primitive types plus \"array\" and \"null\"\n  */\n  private get type(): string {\n    return getType(this.json);\n  }\n\n  /*\n   * get object keys\n   * If there is an empty key we pad it wit quotes to make it visible\n  */\n  private get keys(): string[] {\n    if (this.isObject) {\n      return Object.keys(this.json).map((key)=> key ? key : '\"\"');\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Toggles `isOpen` state\n   *\n  */\n  toggleOpen() {\n    this.isOpen = !this.isOpen;\n\n    if (this.element) {\n      if (this.isOpen) {\n        this.appendChildren(this.config.animateOpen);\n      } else{\n        this.removeChildren(this.config.animateClose);\n      }\n      this.element.classList.toggle(cssClass('open'));\n    }\n  }\n\n  /**\n  * Open all children up to a certain depth.\n  * Allows actions such as expand all/collapse all\n  *\n  */\n  openAtDepth(depth = 1) {\n    if (depth < 0) {\n      return;\n    }\n\n    this.open = depth;\n    this.isOpen = (depth !== 0);\n\n    if (this.element) {\n      this.removeChildren(false);\n\n      if (depth === 0) {\n        this.element.classList.remove(cssClass('open'));\n      } else {\n        this.appendChildren(this.config.animateOpen);\n        this.element.classList.add(cssClass('open'));\n      }\n    }\n  }\n\n  /**\n   * Generates inline preview\n   *\n   * @returns {string}\n  */\n  getInlinepreview() {\n    if (this.isArray) {\n\n      // if array length is greater then 100 it shows \"Array[101]\"\n      if (this.json.length > this.config.hoverPreviewArrayCount) {\n        return `Array[${this.json.length}]`;\n      } else {\n        return `[${this.json.map(getPreview).join(', ')}]`;\n      }\n    } else {\n\n      const keys = this.keys;\n\n      // the first five keys (like Chrome Developer Tool)\n      const narrowKeys = keys.slice(0, this.config.hoverPreviewFieldCount);\n\n      // json value schematic information\n      const kvs = narrowKeys.map(key => `${key}:${getPreview(this.json[key])}`);\n\n      // if keys count greater then 5 then show ellipsis\n      const ellipsis = keys.length >= this.config.hoverPreviewFieldCount ? '…' : '';\n\n      return `{${kvs.join(', ')}${ellipsis}}`;\n    }\n  }\n\n\n  /**\n   * Renders an HTML element and installs event listeners\n   *\n   * @returns {HTMLDivElement}\n  */\n  render(): HTMLDivElement {\n\n    // construct the root element and assign it to this.element\n    this.element = createElement('div', 'row');\n\n    // construct the toggler link\n    const togglerLink = createElement('a', 'toggler-link');\n\n    // if this is an object we need a wrapper span (toggler)\n    if (this.isObject) {\n      togglerLink.appendChild(createElement('span', 'toggler'));\n    }\n\n    // if this is child of a parent formatter we need to append the key\n    if (this.hasKey) {\n      togglerLink.appendChild(createElement('span', 'key', `${this.key}:`));\n    }\n\n    // Value for objects and arrays\n    if (this.isObject) {\n\n      // construct the value holder element\n      const value = createElement('span', 'value');\n\n      // we need a wrapper span for objects\n      const objectWrapperSpan = createElement('span');\n\n      // get constructor name and append it to wrapper span\n      var constructorName = createElement('span', 'constructor-name', this.constructorName);\n      objectWrapperSpan.appendChild(constructorName);\n\n      // if it's an array append the array specific elements like brackets and length\n      if (this.isArray) {\n        const arrayWrapperSpan = createElement('span');\n        arrayWrapperSpan.appendChild(createElement('span', 'bracket', '['));\n        arrayWrapperSpan.appendChild(createElement('span', 'number', (this.json.length)));\n        arrayWrapperSpan.appendChild(createElement('span', 'bracket', ']'));\n        objectWrapperSpan.appendChild(arrayWrapperSpan);\n      }\n\n      // append object wrapper span to toggler link\n      value.appendChild(objectWrapperSpan);\n      togglerLink.appendChild(value);\n\n    // Primitive values\n    } else {\n\n      // make a value holder element\n      const value = this.isUrl ? createElement('a') : createElement('span');\n\n      // add type and other type related CSS classes\n      value.classList.add(cssClass(this.type));\n      if (this.isDate) {\n        value.classList.add(cssClass('date'));\n      }\n      if (this.isUrl) {\n        value.classList.add(cssClass('url'));\n        value.setAttribute('href', this.json);\n      }\n\n      // Append value content to value element\n      const valuePreview = getValuePreview(this.json, this.json);\n      value.appendChild(document.createTextNode(valuePreview));\n\n      // append the value element to toggler link\n      togglerLink.appendChild(value);\n    }\n\n    // if hover preview is enabled, append the inline preview element\n    if (this.isObject && this.config.hoverPreviewEnabled) {\n      const preview = createElement('span', 'preview-text');\n      preview.appendChild(document.createTextNode(this.getInlinepreview()));\n      togglerLink.appendChild(preview);\n    }\n\n    // construct a children element\n    const children = createElement('div', 'children');\n\n    // set CSS classes for children\n    if (this.isObject) {\n      children.classList.add(cssClass('object'));\n    }\n    if (this.isArray) {\n      children.classList.add(cssClass('array'));\n    }\n    if (this.isEmpty) {\n      children.classList.add(cssClass('empty'));\n    }\n\n    // set CSS classes for root element\n    if (this.config && this.config.theme) {\n      this.element.classList.add(cssClass(this.config.theme));\n    }\n    if (this.isOpen) {\n      this.element.classList.add(cssClass('open'));\n    }\n\n    // append toggler and children elements to root element\n    this.element.appendChild(togglerLink);\n    this.element.appendChild(children);\n\n    // if formatter is set to be open call appendChildren\n    if (this.isObject && this.isOpen) {\n      this.appendChildren();\n    }\n\n    // add event listener for toggling\n    if (this.isObject) {\n      togglerLink.addEventListener('click', this.toggleOpen.bind(this));\n    }\n\n    return this.element as HTMLDivElement;\n  }\n\n  /**\n   * Appends all the children to children element\n   * Animated option is used when user triggers this via a click\n  */\n  appendChildren(animated: boolean = false) {\n    const children = this.element.querySelector(`div.${cssClass('children')}`);\n\n    if (!children || this.isEmpty) { return; }\n\n    if (animated) {\n      let index = 0;\n      const addAChild = ()=> {\n        const key = this.keys[index];\n        const formatter = new JSONFormatter(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n\n        index += 1;\n\n        if (index < this.keys.length) {\n          if (index > MAX_ANIMATED_TOGGLE_ITEMS) {\n            addAChild();\n          } else {\n            requestAnimationFrame(addAChild);\n          }\n        }\n      };\n\n      requestAnimationFrame(addAChild);\n\n    } else {\n      this.keys.forEach(key => {\n        const formatter = new JSONFormatter(this.json[key], this.open - 1, this.config, key);\n        children.appendChild(formatter.render());\n      });\n    }\n  }\n\n  /**\n   * Removes all the children from children element\n   * Animated option is used when user triggers this via a click\n  */\n  removeChildren(animated: boolean = false) {\n    const childrenElement = this.element.querySelector(`div.${cssClass('children')}`) as HTMLDivElement;\n\n    if (animated) {\n      let childrenRemoved = 0;\n      const removeAChild = ()=> {\n        if (childrenElement && childrenElement.children.length) {\n          childrenElement.removeChild(childrenElement.children[0]);\n          childrenRemoved += 1;\n          if (childrenRemoved > MAX_ANIMATED_TOGGLE_ITEMS) {\n            removeAChild();\n          } else {\n            requestAnimationFrame(removeAChild);\n          }\n        }\n      };\n      requestAnimationFrame(removeAChild);\n    } else {\n      if (childrenElement) {\n        childrenElement.innerHTML = '';\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.ts","/*\n * Escapes `\"` charachters from string\n*/\nfunction escapeString(str: string): string {\n  return str.replace('\"', '\\\"');\n}\n\n/*\n * Determines if a value is an object\n*/\nexport function isObject(value: any): boolean {\n  var type = typeof value;\n  return !!value && (type == 'object');\n}\n\n/*\n * Gets constructor name of an object.\n * From http://stackoverflow.com/a/332429\n *\n*/\nexport function getObjectName(object: Object):string {\n  if (object === undefined) {\n    return '';\n  }\n  if (object === null) {\n    return 'Object';\n  }\n  if (typeof object === 'object' && !object.constructor) {\n      return 'Object';\n  }\n\n  const funcNameRegex = /function ([^(]*)/;\n  const results = (funcNameRegex).exec((object).constructor.toString());\n  if (results && results.length > 1) {\n    return results[1];\n  } else {\n    return '';\n  }\n}\n\n/*\n * Gets type of an object. Returns \"null\" for null objects\n*/\nexport function getType(object: Object): string {\n  if (object === null) { return 'null'; }\n  return typeof object;\n}\n\n/*\n * Generates inline preview for a JavaScript object based on a value\n*/\nexport function getValuePreview (object: Object, value: string): string {\n  var type = getType(object);\n\n  if (type === 'null' || type === 'undefined') { return type; }\n\n  if (type === 'string') {\n    value = '\"' + escapeString(value) + '\"';\n  }\n  if (type === 'function'){\n\n    // Remove content of the function\n    return object.toString()\n        .replace(/[\\r\\n]/g, '')\n        .replace(/\\{.*\\}/, '') + '{…}';\n  }\n  return value;\n}\n\n/*\n * Generates inline preview for a JavaScript object\n*/\nexport function getPreview(object: string): string {\n  let value = '';\n  if (isObject(object)) {\n    value = getObjectName(object);\n    if (Array.isArray(object))\n      value += '[' + object.length + ']';\n  } else {\n    value = getValuePreview(object, object);\n  }\n  return value;\n}\n\n/*\n * Generates a prefixed CSS class name\n*/\nexport function cssClass(className:string): string {\n  return `json-formatter-${className}`;\n}\n\n/*\n  * Creates a new DOM element wiht given type and class\n  * TODO: move me to helpers\n*/\nexport function createElement(type: string, className?: string, content?: Element|string): Element {\n  const el = document.createElement(type);\n  if (className) {\n    el.classList.add(cssClass(className));\n  }\n  if (content !== undefined) {\n    if (content instanceof Node) {\n      el.appendChild(content);\n    } else {\n      el.appendChild(document.createTextNode(String(content)));\n    }\n  }\n  return el;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers.ts"],"sourceRoot":""}